#: import Spacer components.components.Spacer
#: import SelectSignInSignUpButton components.components.SelectSignInSignUpButton


<UserManagerScreen>:
    name: 'usr_manager_scr'
    MDFloatLayout:
        orientation: 'vertical'
        md_bg_color: 'lightseagreen'

        MDBoxLayout:
            orientation: 'vertical'
            pos_hint: {'center_x': .5, 'center_y': .5}
            size_hint: .85, .70

            MDBoxLayout:
                orientation: 'horizontal'
                size_hint_y: None
                height: self.children[0].height

                SelectSignInSignUpButton:
                    text: 'Log in'
                    id: login_btn
                    on_release: root.switch_scr(self)

                Spacer:
                    orientation: 'horizontal'
                    value: self.parent.width * 0.05

                SelectSignInSignUpButton:
                    text: 'Register'
                    id: register_btn
                    on_release: root.switch_scr(self)


            MDScreenManager:
                id: signin_signup_manager
                LoginScr:
                    top_bar: root.top_bar
                RegisterScr:
                    top_bar: root.top_bar


<SelectSignInSignUpButton>:
    style: 'filled'
    size_hint_x: None
    width: self.parent.width * 0.49
    radius: dp(0)

    MDButtonText:
        pos_hint: {'center_x': .5, 'center_y': .5}
        text: root.text
        theme_text_color: 'Custom'
        text_color: 'blue'
        disabled_color: 'grey'


<LoginScr>:
    name: 'log_in_scr'
    MDBoxLayout:
        md_bg_color: 'grey'
        orientation: 'vertical'
        padding: dp(20)
        spacing: dp(15)

        MDTextField:
            id: enter_user
            mode: 'filled'


            MDTextFieldLeadingIcon:
                icon: 'account-outline'

            MDTextFieldHintText:
                text: 'Username'

        PasswordField:
            id: enter_pass
            hint_txt: 'Password'

        Spacer:
            orientation: 'vertical'
            value: dp(20)

#        MDRaisedButton:
#            text: 'Log in'
#            pos_hint: {'center_x': .5}
#            size_hint_x: .75
#            on_release: root.perform_login()

        Spacer:
            orientation: 'vertical'
            value: dp(10)


        MDLabel:
            text: ''


<RegisterScr>
    name: 'register_scr'
    MDBoxLayout:
        md_bg_color: 'white'
        orientation: 'vertical'
        padding: dp(20)
        spacing: dp(15)

#        MDTextField:
#            id: create_email
#            multiline: False
#            write_tab: False
#            icon_left: 'email-outline'
#            hint_text: 'Email'
#            pos_hint: {'center_x': .5}
#            helper_text: "Not a valid email"
#            helper_text_mode: "on_error"
#            set_text: app.validate_text_field(self)
#
#        MDTextField:
#            id: create_user
#            multiline: False
#            write_tab: False
#            icon_left: 'account-outline'
#            hint_text: 'Username'
#            pos_hint: {'center_x': .5}
#            set_text: app.validate_text_field(self)

        PasswordField:
            id: create_pass
            hint_txt: 'Password'

        Spacer:
            orientation: 'vertical'
            value: dp(10)

#        MDRaisedButton:
#            icon_left: 'account-outline'
#            text: 'Sign Up'
#            pos_hint: {'center_x': .5}
#            size_hint_x: .75
#            on_release: root.perform_register()

        MDLabel:
            text: ''



<PasswordField@MDTextField>:
    id: text_field
    mode: 'filled'
    multiline: False
    write_tab: False
    password: True  # This will mask the inputted text
    password_mask: "*"  # Optional: specify the character used for masking (default is "*")
    password_mask_delay: 1000  # Optional: delay in milliseconds before masking characters (default is 0)

#    set_text: app.validate_text_field(self)

    MDTextFieldHintText:
        text: root.hint_txt

    MDTextFieldLeadingIcon:
        icon: "key-variant"

    MDTextFieldTrailingIcon:
        icon: 'eye-off'

    MDIconButton:
        icon: "eye-off"
        pos_hint: {"center_y": .5}
        on_release:
            self.icon = "eye" if self.icon == "eye-off" else "eye-off"

